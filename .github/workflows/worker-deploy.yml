name: Worker Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment target"
        required: true
        default: "preview"
        type: choice
        options:
          - preview
          - production
      apply_migrations:
        description: "Apply D1 migrations before deploying?"
        required: true
        default: true
        type: boolean
      sync_cron:
        description: "Sync cron triggers after deploying?"
        required: true
        default: true
        type: boolean

jobs:
  deploy:
    name: Deploy Worker (${{ github.event.inputs.environment }})
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run worker test suites
        run: npm run test:ci

      - name: Apply D1 migrations (preview)
        if: ${{ fromJSON(github.event.inputs.apply_migrations) && github.event.inputs.environment == 'preview' }}
        run: npm run migrate:apply:preview

      - name: Apply D1 migrations (production)
        if: ${{ fromJSON(github.event.inputs.apply_migrations) && github.event.inputs.environment == 'production' }}
        run: npm run migrate:apply:production

      - name: Deploy Worker (preview)
        if: ${{ github.event.inputs.environment == 'preview' }}
        run: npm run deploy:preview

      - name: Deploy Worker (production)
        if: ${{ github.event.inputs.environment == 'production' }}
        run: npm run deploy:production

      - name: Sync cron triggers (preview)
        if: ${{ fromJSON(github.event.inputs.sync_cron) && github.event.inputs.environment == 'preview' }}
        run: npm run cron:deploy:preview

      - name: Sync cron triggers (production)
        if: ${{ fromJSON(github.event.inputs.sync_cron) && github.event.inputs.environment == 'production' }}
        run: npm run cron:deploy:production

      - name: Show latest deployments
        run: npx wrangler deployments list --env ${{ github.event.inputs.environment }}
