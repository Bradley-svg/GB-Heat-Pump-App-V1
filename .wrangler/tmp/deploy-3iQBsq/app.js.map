{
  "version": 3,
  "sources": ["../../../node_modules/jose/dist/browser/runtime/webcrypto.js", "../../../node_modules/jose/dist/browser/lib/buffer_utils.js", "../../../node_modules/jose/dist/browser/runtime/base64url.js", "../../../node_modules/jose/dist/browser/util/errors.js", "../../../node_modules/jose/dist/browser/lib/crypto_key.js", "../../../node_modules/jose/dist/browser/lib/invalid_key_input.js", "../../../node_modules/jose/dist/browser/runtime/is_key_like.js", "../../../node_modules/jose/dist/browser/lib/is_disjoint.js", "../../../node_modules/jose/dist/browser/lib/is_object.js", "../../../node_modules/jose/dist/browser/runtime/check_key_length.js", "../../../node_modules/jose/dist/browser/lib/is_jwk.js", "../../../node_modules/jose/dist/browser/runtime/jwk_to_key.js", "../../../node_modules/jose/dist/browser/runtime/normalize_key.js", "../../../node_modules/jose/dist/browser/key/import.js", "../../../node_modules/jose/dist/browser/lib/check_key_type.js", "../../../node_modules/jose/dist/browser/lib/validate_crit.js", "../../../node_modules/jose/dist/browser/lib/validate_algorithms.js", "../../../node_modules/jose/dist/browser/runtime/subtle_dsa.js", "../../../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js", "../../../node_modules/jose/dist/browser/runtime/verify.js", "../../../node_modules/jose/dist/browser/jws/flattened/verify.js", "../../../node_modules/jose/dist/browser/jws/compact/verify.js", "../../../node_modules/jose/dist/browser/lib/epoch.js", "../../../node_modules/jose/dist/browser/lib/secs.js", "../../../node_modules/jose/dist/browser/lib/jwt_claims_set.js", "../../../node_modules/jose/dist/browser/jwt/verify.js", "../../../node_modules/jose/dist/browser/jwks/local.js", "../../../node_modules/jose/dist/browser/runtime/fetch_jwks.js", "../../../node_modules/jose/dist/browser/jwks/remote.js", "../../../src/app.ts"],
  "sourceRoot": "D:\\Work\\GREENBRO\\GB-Heat-Pump-App-V1\\.wrangler\\tmp\\deploy-3iQBsq",
  "sourcesContent": ["export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n", "import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n", "export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n", "function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n", "function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n", "const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n", "import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n", "import { isJWK } from '../lib/is_jwk.js';\nimport { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst exportKeyValue = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg, freeze = false) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        pubCache || (pubCache = new WeakMap());\n        const cryptoKey = importAndCache(pubCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        privCache || (privCache = new WeakMap());\n        const cryptoKey = importAndCache(privCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n", "const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token?.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch { }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    const localJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(localJWKSet, {\n        jwks: {\n            value: () => clone(set._jwks),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return localJWKSet;\n}\n", "import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n", "import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'jose';\n    const VERSION = 'v5.9.3';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isObject)) {\n        return false;\n    }\n    return true;\n}\nclass RemoteJWKSet {\n    constructor(url, options) {\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options?.agent, headers: options?.headers };\n        this._timeoutDuration =\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n        if (options?.[jwksCache] !== undefined) {\n            this._cache = options?.[jwksCache];\n            if (isFreshJwksCache(options?.[jwksCache], this._cacheMaxAge)) {\n                this._jwksTimestamp = this._cache.uat;\n                this._local = createLocalJWKSet(this._cache.jwks);\n            }\n        }\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._local || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await this._local(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return this._local(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        const headers = new Headers(this._options.headers);\n        if (USER_AGENT && !headers.has('User-Agent')) {\n            headers.set('User-Agent', USER_AGENT);\n            this._options.headers = Object.fromEntries(headers.entries());\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            this._local = createLocalJWKSet(json);\n            if (this._cache) {\n                this._cache.uat = Date.now();\n                this._cache.jwks = json;\n            }\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(remoteJWKSet, {\n        coolingDown: {\n            get: () => set.coolingDown(),\n            enumerable: true,\n            configurable: false,\n        },\n        fresh: {\n            get: () => set.fresh(),\n            enumerable: true,\n            configurable: false,\n        },\n        reload: {\n            value: () => set.reload(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n        reloading: {\n            get: () => !!set._pendingFetch,\n            enumerable: true,\n            configurable: false,\n        },\n        jwks: {\n            value: () => set._local?.jwks(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return remoteJWKSet;\n}\nexport const experimental_jwksCache = jwksCache;\n", "// app.ts\r\n// Cloudflare Worker (TypeScript) \u2014 GreenBro Heat Pump Dashboard API + SPA host\r\n// Updates in this version:\r\n//  \u2022 CORS helper now returns allow-* headers (and preflight covers device routes)\r\n//  \u2022 /api/devices/:id/latest now ENFORCES tenant scope and REDACTS nested device_id\r\n//  \u2022 /api/ingest/:profileId and /api/heartbeat/:profileId prevent cross-tenant hijack\r\n//  \u2022 Timestamp sanity helper shared (now \u2212 1y \u2026 now + 5m)\r\n//  \u2022 ops_metrics writes are best-effort (won\u2019t flip success into 500)\r\n//  \u2022 deriveUserFromClaims also understands Access groups like client:<id>\r\n//  \u2022 NEW: /api/devices (tenant-scoped listing) + cron offline marker\r\n\r\nimport { createRemoteJWKSet, jwtVerify, JWTPayload } from \"jose\";\r\n\r\n// ---- Types ------------------------------------------------------------------\r\n\r\ntype Role = \"admin\" | \"contractor\" | \"client\";\r\n\r\ninterface User {\r\n  email: string;\r\n  roles: Role[];\r\n  clientIds: string[];\r\n}\r\n\r\ninterface TelemetryMetrics {\r\n  supplyC?: number | null;\r\n  returnC?: number | null;\r\n  tankC?: number | null;\r\n  ambientC?: number | null;\r\n  flowLps?: number | null;\r\n  compCurrentA?: number | null;\r\n  eevSteps?: number | null;\r\n  powerKW?: number | null;\r\n  mode?: string | null;\r\n  defrost?: number | null;\r\n}\r\n\r\ninterface TelemetryBody {\r\n  device_id: string;\r\n  ts: string; // ISO timestamp\r\n  metrics: TelemetryMetrics;\r\n  faults?: unknown[];\r\n  rssi?: number | null;\r\n}\r\n\r\ninterface Env {\r\n  DB: D1Database;\r\n  ACCESS_JWKS_URL: string;\r\n  ACCESS_AUD: string;\r\n  APP_BASE_URL: string;   // e.g. \"https://your-worker-subdomain.workers.dev\"\r\n  RETURN_DEFAULT: string; // e.g. \"https://greenbro.co.za\"\r\n  HEARTBEAT_INTERVAL_SECS?: string;\r\n  OFFLINE_MULTIPLIER?: string;\r\n}\r\n\r\n// ---- Utilities ---------------------------------------------------------------\r\n\r\nconst JSON_CT = \"application/json;charset=utf-8\";\r\nconst HTML_CT = \"text/html;charset=utf-8\";\r\nconst SVG_CT  = \"image/svg+xml;charset=utf-8\";\r\n\r\nfunction withSecurityHeaders(res: Response) {\r\n  const csp = [\r\n    \"default-src 'self'\",\r\n    \"script-src 'self' https://unpkg.com 'unsafe-inline'\",\r\n    \"style-src 'self' 'unsafe-inline'\",\r\n    \"img-src 'self' data:\",\r\n    \"connect-src 'self'\",\r\n    \"font-src 'self' data:\",\r\n    \"object-src 'none'\",\r\n    \"base-uri 'self'\",\r\n    \"frame-ancestors 'none'\",\r\n  ].join(\"; \");\r\n\r\n  const h = new Headers(res.headers);\r\n  h.set(\"Content-Security-Policy\", csp);\r\n  h.set(\"X-Content-Type-Options\", \"nosniff\");\r\n  h.set(\"Referrer-Policy\", \"no-referrer\");\r\n  h.set(\"Cross-Origin-Opener-Policy\", \"same-origin\");\r\n\r\n  return new Response(res.body, {\r\n    headers: h,\r\n    status: res.status,\r\n    statusText: res.statusText,\r\n  });\r\n}\r\n\r\nfunction json(data: unknown, init: ResponseInit = {}) {\r\n  return withSecurityHeaders(\r\n    new Response(JSON.stringify(data), {\r\n      headers: { \"content-type\": JSON_CT },\r\n      ...init,\r\n    }),\r\n  );\r\n}\r\n\r\nfunction text(s: string, init: ResponseInit = {}) {\r\n  return withSecurityHeaders(new Response(s, init));\r\n}\r\n\r\nasync function sha256Hex(input: string) {\r\n  const data = new TextEncoder().encode(input);\r\n  const digest = await crypto.subtle.digest(\"SHA-256\", data);\r\n  return [...new Uint8Array(digest)].map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\r\n}\r\n\r\nfunction round(n: unknown, dp: number) {\r\n  if (typeof n !== \"number\" || Number.isNaN(n)) return null;\r\n  const f = Math.pow(10, dp);\r\n  return Math.round(n * f) / f;\r\n}\r\n\r\nfunction nowISO() {\r\n  return new Date().toISOString();\r\n}\r\n\r\nfunction maskId(id: string | null | undefined) {\r\n  if (!id) return \"\";\r\n  if (id.length <= 4) return \"****\";\r\n  return id.slice(0, 3) + \"\u2026\" + id.slice(-2);\r\n}\r\n\r\nfunction parseAndCheckTs(ts: string) {\r\n  const ms = Date.parse(ts);\r\n  if (Number.isNaN(ms)) return { ok: false as const, reason: \"Invalid timestamp\" };\r\n  const now = Date.now();\r\n  const ahead = 5 * 60 * 1000;                 // +5 min\r\n  const behind = 365 * 24 * 60 * 60 * 1000;    // ~1 year\r\n  if (ms > now + ahead) return { ok: false as const, reason: \"Timestamp too far in future\" };\r\n  if (ms < now - behind) return { ok: false as const, reason: \"Timestamp too old\" };\r\n  return { ok: true as const, ms };\r\n}\r\n\r\n// ---- CORS --------------------------------------------------------------------\r\n\r\nconst CORS_BASE: Record<string, string> = {\r\n  \"access-control-allow-origin\": \"*\",\r\n  \"access-control-allow-methods\": \"GET,POST,OPTIONS\",\r\n  \"access-control-allow-headers\": \"content-type,cf-access-jwt-assertion,x-greenbro-device-key\",\r\n};\r\n\r\nfunction withCors(res: Response) {\r\n  const h = new Headers(res.headers);\r\n  for (const [k, v] of Object.entries(CORS_BASE)) h.set(k, v);\r\n  return new Response(res.body, { headers: h, status: res.status, statusText: res.statusText });\r\n}\r\n\r\nfunction maybeHandlePreflight(req: Request, pathname: string) {\r\n  if (req.method !== \"OPTIONS\") return null;\r\n  if (\r\n    pathname.startsWith(\"/api/ingest/\") ||\r\n    pathname.startsWith(\"/api/heartbeat/\") ||\r\n    /^\\/api\\/devices\\/[^/]+\\/latest$/.test(pathname)\r\n  ) {\r\n    return withSecurityHeaders(new Response(\"\", { status: 204, headers: CORS_BASE }));\r\n  }\r\n  return null;\r\n}\r\n\r\n// ---- RBAC helpers ------------------------------------------------------------\r\n\r\nfunction deriveUserFromClaims(claims: JWTPayload): User {\r\n  const email = (claims as any).email || claims.sub || \"unknown@unknown\";\r\n\r\n  const rawGroups: string[] = Array.isArray((claims as any).groups)\r\n    ? (claims as any).groups.map(String)\r\n    : [];\r\n  const rawRoles: string[] = Array.isArray((claims as any).roles)\r\n    ? (claims as any).roles.map(String)\r\n    : rawGroups;\r\n\r\n  const roles = new Set<Role>();\r\n  for (const r of rawRoles) {\r\n    const v = r.toLowerCase();\r\n    if (v.includes(\"admin\")) roles.add(\"admin\");\r\n    else if (v.includes(\"contractor\")) roles.add(\"contractor\");\r\n    else if (v.includes(\"client\")) roles.add(\"client\");\r\n  }\r\n  if (roles.size === 0) roles.add(\"client\");\r\n\r\n  // Accept explicit claim and/or Access groups like \"client:<id>\"\r\n  const fromClaim = Array.isArray((claims as any).clientIds) ? (claims as any).clientIds.map(String) : [];\r\n  const fromGroups = rawGroups\r\n    .filter(g => g.startsWith(\"client:\"))\r\n    .map(g => g.slice(\"client:\".length));\r\n  const clientIds = Array.from(new Set([...fromClaim, ...fromGroups]));\r\n\r\n  return { email, roles: Array.from(roles), clientIds };\r\n}\r\n\r\nfunction landingFor(user: User) {\r\n  if (user.roles.includes(\"admin\")) return \"/app/overview\";\r\n  if (user.roles.includes(\"client\")) return \"/app/compact\";\r\n  if (user.roles.includes(\"contractor\")) return \"/app/devices\";\r\n  return \"/app/unauthorized\";\r\n}\r\n\r\n// ---- Access (Zero Trust) -----------------------------------------------------\r\n\r\nconst jwksCache = new Map<string, ReturnType<typeof createRemoteJWKSet>>();\r\nfunction getJwks(env: Env) {\r\n  const url = env.ACCESS_JWKS_URL;\r\n  if (!jwksCache.has(url)) {\r\n    jwksCache.set(url, createRemoteJWKSet(new URL(url)));\r\n  }\r\n  return jwksCache.get(url)!;\r\n}\r\n\r\nasync function requireAccessUser(req: Request, env: Env): Promise<User | null> {\r\n  const jwt = req.headers.get(\"Cf-Access-Jwt-Assertion\");\r\n  if (!jwt) return null;\r\n  try {\r\n    const { payload } = await jwtVerify(jwt, getJwks(env), { audience: env.ACCESS_AUD });\r\n    return deriveUserFromClaims(payload);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n// ---- Assets -----------------------------------------------------------------\r\n\r\nconst ASSETS: Record<string, { ct: string; body: string }> = {\r\n  \"GREENBRO LOGO APP.svg\": {\r\n    ct: SVG_CT,\r\n    body: `<svg viewBox=\"0 0 320 64\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" aria-label=\"GreenBro\"><rect width=\"320\" height=\"64\" rx=\"12\" fill=\"#0b1e14\"/><text x=\"32\" y=\"40\" font-size=\"28\" font-family=\"Arial, Helvetica, sans-serif\" fill=\"#52ff99\">GreenBro</text></svg>`,\r\n  },\r\n  \"Gear_Icon_01.svg\": {\r\n    ct: SVG_CT,\r\n    body: `<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"#52ff99\"/><path d=\"M3 12h3m12 0h3M12 3v3m0 12v3M5 5l2.1 2.1M16.9 16.9L19 19M19 5l-2.1 2.1M7.1 16.9 5 19\" stroke=\"#52ff99\" stroke-width=\"2\" fill=\"none\"/></svg>`,\r\n  },\r\n  \"Gear_Icon_02.svg\": {\r\n    ct: SVG_CT,\r\n    body: `<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\" stroke=\"#52ff99\" stroke-width=\"2\" fill=\"none\"/><circle cx=\"12\" cy=\"12\" r=\"2\" fill=\"#52ff99\"/></svg>`,\r\n  },\r\n  \"Gear_Icon_03.svg\": {\r\n    ct: SVG_CT,\r\n    body: `<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 12a8 8 0 1 0 16 0\" stroke=\"#52ff99\" stroke-width=\"2\" fill=\"none\"/><path d=\"M12 4a8 8 0 0 0 0 16\" stroke=\"#52ff99\" stroke-width=\"2\" fill=\"none\"/></svg>`,\r\n  },\r\n};\r\n\r\n// ---- Route handlers ----------------------------------------------------------\r\n\r\nasync function handleHealth() {\r\n  return json({ ok: true, ts: nowISO() });\r\n}\r\n\r\nasync function handleMe(req: Request, env: Env) {\r\n  const user = await requireAccessUser(req, env);\r\n  if (!user) return json({ error: \"Unauthorized\" }, { status: 401 });\r\n  return json(user);\r\n}\r\n\r\n// GET /api/devices/:id/latest  \u2014 tenant-scoped + masking\r\nasync function handleLatest(req: Request, env: Env, deviceId: string) {\r\n  const user = await requireAccessUser(req, env);\r\n  if (!user) return json({ error: \"Unauthorized\" }, { status: 401 });\r\n\r\n  const isAdmin = user.roles.some(r => r.toLowerCase().includes(\"admin\"));\r\n  let row: any | null;\r\n\r\n  if (isAdmin) {\r\n    row = await env.DB.prepare(`SELECT * FROM latest_state WHERE device_id = ?1 LIMIT 1`)\r\n      .bind(deviceId).first();\r\n  } else {\r\n    if (!user.clientIds || user.clientIds.length === 0) {\r\n      return json({ error: \"Not found\" }, { status: 404 });\r\n    }\r\n    const placeholders = user.clientIds.map((_, i) => `?${i + 2}`).join(\",\");\r\n    row = await env.DB.prepare(\r\n      `SELECT ls.*\r\n         FROM latest_state ls\r\n         JOIN devices d ON d.device_id = ls.device_id\r\n        WHERE ls.device_id = ?1\r\n          AND d.profile_id IN (${placeholders})\r\n        LIMIT 1`\r\n    ).bind(deviceId, ...user.clientIds).first();\r\n  }\r\n\r\n  if (!row) return json({ error: \"Not found\" }, { status: 404 });\r\n\r\n  // Redact nested device_id for non-admins\r\n  let outwardDeviceId = deviceId;\r\n  let latest = row;\r\n  if (!isAdmin) {\r\n    const { device_id: _drop, ...rest } = row;\r\n    latest = rest;\r\n    outwardDeviceId = maskId(deviceId);\r\n  }\r\n\r\n  return json({ device_id: outwardDeviceId, latest });\r\n}\r\n\r\n// NEW \u2014 GET /api/devices (tenant-scoped list)\r\nasync function handleListDevices(req: Request, env: Env) {\r\n  const user = await requireAccessUser(req, env);\r\n  if (!user) return json({ error: \"Unauthorized\" }, { status: 401 });\r\n\r\n  const isAdmin = user.roles.some(r => r.toLowerCase().includes(\"admin\"));\r\n  const url = new URL(req.url);\r\n  const mine = url.searchParams.get(\"mine\") === \"1\" || !isAdmin; // default to scoped for non-admin\r\n  const limit = Math.max(1, Math.min(100, Number(url.searchParams.get(\"limit\") ?? \"50\")));\r\n  const cursor = url.searchParams.get(\"cursor\"); // ISO timestamp for pagination\r\n\r\n  let where = \"\";\r\n  const bind: any[] = [];\r\n\r\n  if (mine) {\r\n    if (!user.clientIds?.length) return json({ items: [], next: null });\r\n    const ph = user.clientIds.map((_, i) => `?${i + 1}`).join(\",\");\r\n    where = `WHERE d.profile_id IN (${ph})`;\r\n    bind.push(...user.clientIds);\r\n  }\r\n\r\n  if (cursor) {\r\n    where += where ? \" AND\" : \"WHERE\";\r\n    where += \" (d.last_seen_at IS NULL OR d.last_seen_at < ?)\";\r\n    bind.push(cursor);\r\n  }\r\n\r\n  const sql = `\r\n    SELECT d.device_id, d.profile_id, d.site, d.firmware, d.map_version,\r\n           d.online, d.last_seen_at\r\n      FROM devices d\r\n      ${where}\r\n     ORDER BY (d.last_seen_at IS NOT NULL) DESC, d.last_seen_at DESC\r\n     LIMIT ${limit + 1}\r\n  `;\r\n\r\n  const rows = (await env.DB.prepare(sql).bind(...bind).all<{ device_id:string; last_seen_at:string|null; online:number; profile_id:string }>())\r\n    .results ?? [];\r\n\r\n  const hasMore = rows.length > limit;\r\n  const slice = hasMore ? rows.slice(0, limit) : rows;\r\n\r\n  // Mask device_ids for non-admins\r\n  const items = slice.map(r => ({\r\n    device_id: isAdmin ? r.device_id : maskId(r.device_id),\r\n    profile_id: r.profile_id,\r\n    online: !!r.online,\r\n    last_seen_at: r.last_seen_at,\r\n    site: (r as any).site ?? null,\r\n    firmware: (r as any).firmware ?? null,\r\n    map_version: (r as any).map_version ?? null,\r\n  }));\r\n\r\n  const next = hasMore ? (slice[slice.length - 1]?.last_seen_at ?? null) : null;\r\n\r\n  return json({ items, next });\r\n}\r\n\r\n// Device key check (returns boolean)\r\nasync function verifyDeviceKey(env: Env, deviceId: string, keyHeader: string | null) {\r\n  if (!keyHeader) return false;\r\n  const row = await env.DB\r\n    .prepare(`SELECT device_key_hash FROM devices WHERE device_id = ?1`)\r\n    .bind(deviceId)\r\n    .first<{ device_key_hash?: string }>();\r\n  if (!row || !row.device_key_hash) return false;\r\n  const hash = await sha256Hex(keyHeader);\r\n  return hash.toLowerCase() === String(row.device_key_hash).toLowerCase();\r\n}\r\n\r\n// POST /api/ingest/:profileId  \u2014 tenant-safe + robust\r\nasync function handleIngest(req: Request, env: Env, profileId: string) {\r\n  const t0 = Date.now();\r\n\r\n  let body: TelemetryBody;\r\n  try {\r\n    // NOTE: no generic arg on json(); cast instead\r\n    body = (await req.json()) as TelemetryBody;\r\n    if (JSON.stringify(body).length > 256_000) {\r\n      return withCors(json({ error: \"Payload too large\" }, { status: 413 }));\r\n    }\r\n  } catch {\r\n    return withCors(json({ error: \"Invalid JSON\" }, { status: 400 }));\r\n  }\r\n\r\n  if (!body?.device_id || !body?.ts || !body?.metrics) {\r\n    return withCors(json({ error: \"Missing required fields\" }, { status: 400 }));\r\n  }\r\n\r\n  // Timestamp sanity\r\n  const tsCheck = parseAndCheckTs(body.ts);\r\n  if (!tsCheck.ok) return withCors(json({ error: tsCheck.reason }, { status: 400 }));\r\n  const tsMs = tsCheck.ms!;\r\n\r\n  // Verify device + key + tenant\r\n  const keyHeader = req.headers.get(\"X-GREENBRO-DEVICE-KEY\");\r\n  if (!(await verifyDeviceKey(env, body.device_id, keyHeader))) {\r\n    return withCors(json({ error: \"Unauthorized\" }, { status: 401 }));\r\n  }\r\n\r\n  const devRow = await env.DB\r\n    .prepare(`SELECT profile_id FROM devices WHERE device_id = ?1`)\r\n    .bind(body.device_id)\r\n    .first<{ profile_id?: string | null }>();\r\n\r\n  if (!devRow) {\r\n    return withCors(json({ error: \"Unauthorized (unknown device)\" }, { status: 401 }));\r\n  }\r\n\r\n  if (devRow.profile_id && devRow.profile_id !== profileId) {\r\n    console.warn(\"Profile mismatch\", { deviceId: body.device_id, urlProfileId: profileId, dbProfile: devRow.profile_id });\r\n    return withCors(json({ error: \"Profile mismatch for device\" }, { status: 409 }));\r\n  }\r\n\r\n  // Attach ownership once\r\n  if (!devRow.profile_id) {\r\n    await env.DB.prepare(\r\n      `UPDATE devices SET profile_id = ?2 WHERE device_id = ?1`\r\n    ).bind(body.device_id, profileId).run();\r\n  }\r\n\r\n  // Derived metrics\r\n  const supply = body.metrics.supplyC ?? null;\r\n  const ret = body.metrics.returnC ?? null;\r\n  const deltaT = typeof supply === \"number\" && typeof ret === \"number\" ? round(supply - ret, 1) : null;\r\n\r\n  const flow = body.metrics.flowLps ?? 0;\r\n  const rho = 0.997;  // kg/L ~ water at ~20\u00B0C\r\n  const cp  = 4.186;  // kJ/(kg\u00B7K)\r\n  const thermalKW = deltaT !== null ? round(rho * cp * flow * (deltaT as number), 2) : null;\r\n\r\n  let cop: number | null = null;\r\n  let cop_quality: \"measured\" | \"estimated\" | null = null;\r\n  if (typeof body.metrics.powerKW === \"number\" && body.metrics.powerKW > 0.05 && thermalKW !== null) {\r\n    cop = round((thermalKW as number) / body.metrics.powerKW, 2) as number;\r\n    cop_quality = \"measured\";\r\n  } else if (thermalKW !== null) {\r\n    cop = null;\r\n    cop_quality = \"estimated\";\r\n  }\r\n\r\n  const faults_json = JSON.stringify(body.faults || []);\r\n  const status_json = JSON.stringify({\r\n    mode: body.metrics.mode ?? null,\r\n    defrost: body.metrics.defrost ?? 0,\r\n    rssi: body.rssi ?? null,\r\n  });\r\n\r\n  try {\r\n    await env.DB.batch([\r\n      env.DB.prepare(\r\n        `INSERT INTO telemetry (device_id, ts, metrics_json, deltaT, thermalKW, cop, cop_quality, status_json, faults_json)\r\n         VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9)\r\n         ON CONFLICT (device_id, ts) DO NOTHING`\r\n      ).bind(\r\n        body.device_id,\r\n        tsMs,\r\n        JSON.stringify(body.metrics),\r\n        deltaT,\r\n        thermalKW,\r\n        cop,\r\n        cop_quality,\r\n        status_json,\r\n        faults_json\r\n      ),\r\n      env.DB.prepare(\r\n        `INSERT INTO latest_state\r\n           (device_id, ts, supplyC, returnC, tankC, ambientC, flowLps, compCurrentA, eevSteps, powerKW,\r\n            deltaT, thermalKW, cop, cop_quality, mode, defrost, online, faults_json, updated_at)\r\n         VALUES (?1,?2,?3,?4,?5,?6,?7,?8,?9,?10,?11,?12,?13,?14,?15,?16,1,?17,?18)\r\n         ON CONFLICT(device_id) DO UPDATE SET\r\n            ts=excluded.ts, supplyC=excluded.supplyC, returnC=excluded.returnC, tankC=excluded.tankC,\r\n            ambientC=excluded.ambientC, flowLps=excluded.flowLps, compCurrentA=excluded.compCurrentA,\r\n            eevSteps=excluded.eevSteps, powerKW=excluded.powerKW, deltaT=excluded.deltaT,\r\n            thermalKW=excluded.thermalKW, cop=excluded.cop, cop_quality=excluded.cop_quality,\r\n            mode=excluded.mode, defrost=excluded.defrost, online=1, faults_json=excluded.faults_json,\r\n            updated_at=excluded.updated_at`\r\n      ).bind(\r\n        body.device_id,\r\n        tsMs,\r\n        supply,\r\n        ret,\r\n        body.metrics.tankC ?? null,\r\n        body.metrics.ambientC ?? null,\r\n        flow,\r\n        body.metrics.compCurrentA ?? null,\r\n        body.metrics.eevSteps ?? null,\r\n        body.metrics.powerKW ?? null,\r\n        deltaT,\r\n        thermalKW,\r\n        cop,\r\n        cop_quality,\r\n        body.metrics.mode ?? null,\r\n        body.metrics.defrost ?? 0,\r\n        faults_json,\r\n        nowISO()\r\n      ),\r\n      env.DB.prepare(\r\n        `UPDATE devices SET online=1, last_seen_at=?2 WHERE device_id=?1`\r\n      ).bind(body.device_id, new Date(tsMs).toISOString()),\r\n    ]);\r\n\r\n    // Best-effort ops metrics\r\n    try {\r\n      const dur = Date.now() - t0;\r\n      await env.DB.prepare(\r\n        `INSERT INTO ops_metrics (ts, route, status_code, duration_ms, device_id) VALUES (?1, ?2, ?3, ?4, ?5)`\r\n      ).bind(nowISO(), \"/api/ingest\", 200, dur, body.device_id).run();\r\n    } catch (e) {\r\n      console.error(\"ops_metrics insert failed (ingest)\", e);\r\n    }\r\n\r\n    return withCors(json({ ok: true }));\r\n  } catch (e: any) {\r\n    try {\r\n      const dur = Date.now() - t0;\r\n      await env.DB.prepare(\r\n        `INSERT INTO ops_metrics (ts, route, status_code, duration_ms, device_id) VALUES (?1, ?2, ?3, ?4, ?5)`\r\n      ).bind(nowISO(), \"/api/ingest\", 500, dur, body.device_id).run();\r\n    } catch (logErr) {\r\n      console.error(\"ops_metrics insert failed (ingest error)\", logErr);\r\n    }\r\n    return withCors(json({ error: \"DB error\", detail: String(e?.message || e) }, { status: 500 }));\r\n  }\r\n}\r\n\r\n// POST /api/heartbeat/:profileId  \u2014 tenant-safe + robust\r\nasync function handleHeartbeat(req: Request, env: Env, profileId: string) {\r\n  let body: { device_id: string; ts?: string; rssi?: number | null };\r\n  try {\r\n    body = await req.json();\r\n  } catch {\r\n    return withCors(json({ error: \"Invalid JSON\" }, { status: 400 }));\r\n  }\r\n\r\n  if (!body?.device_id) {\r\n    return withCors(json({ error: \"Missing device_id\" }, { status: 400 }));\r\n  }\r\n\r\n  const tsStr = body.ts ?? new Date().toISOString();\r\n  const tsCheck = parseAndCheckTs(tsStr);\r\n  if (!tsCheck.ok) return withCors(json({ error: tsCheck.reason }, { status: 400 }));\r\n  const tsMs = tsCheck.ms!;\r\n\r\n  const keyHeader = req.headers.get(\"X-GREENBRO-DEVICE-KEY\");\r\n  if (!(await verifyDeviceKey(env, body.device_id, keyHeader))) {\r\n    return withCors(json({ error: \"Unauthorized\" }, { status: 401 }));\r\n  }\r\n\r\n  const devRow = await env.DB\r\n    .prepare(`SELECT profile_id FROM devices WHERE device_id = ?1`)\r\n    .bind(body.device_id)\r\n    .first<{ profile_id?: string | null }>();\r\n\r\n  if (!devRow) {\r\n    return withCors(json({ error: \"Unauthorized (unknown device)\" }, { status: 401 }));\r\n  }\r\n\r\n  if (devRow.profile_id && devRow.profile_id !== profileId) {\r\n    console.warn(\"Profile mismatch (hb)\", { deviceId: body.device_id, urlProfileId: profileId, dbProfile: devRow.profile_id });\r\n    return withCors(json({ error: \"Profile mismatch for device\" }, { status: 409 }));\r\n  }\r\n\r\n  if (!devRow.profile_id) {\r\n    await env.DB.prepare(\r\n      `UPDATE devices SET profile_id = ?2 WHERE device_id = ?1`\r\n    ).bind(body.device_id, profileId).run();\r\n  }\r\n\r\n  await env.DB.batch([\r\n    env.DB.prepare(\r\n      `UPDATE devices SET online=1, last_seen_at=?2 WHERE device_id=?1`\r\n    ).bind(body.device_id, new Date(tsMs).toISOString()),\r\n    env.DB.prepare(\r\n      `INSERT INTO latest_state (device_id, ts, payload_json)\r\n       VALUES (?1, ?2, json_object('ts', ?2, 'rssi', ?3))\r\n       ON CONFLICT(device_id) DO UPDATE SET ts = excluded.ts, payload_json = excluded.payload_json`\r\n    ).bind(body.device_id, tsMs, body.rssi ?? null),\r\n  ]);\r\n\r\n  try {\r\n    await env.DB.prepare(\r\n      `INSERT INTO ops_metrics (ts, route, status_code, duration_ms, device_id) VALUES (?1, ?2, ?3, ?4, ?5)`\r\n    ).bind(nowISO(), \"/api/heartbeat\", 200, 0, body.device_id).run();\r\n  } catch (e) {\r\n    console.error(\"ops_metrics insert failed (hb)\", e);\r\n  }\r\n\r\n  return withCors(json({ ok: true, server_time: new Date().toISOString() }));\r\n}\r\n\r\n// ---- SPA HTML ---------------------------------------------------------------\r\n\r\nfunction appHtml(env: Env, returnUrlParam: string | null) {\r\n  const returnLink = returnUrlParam || env.RETURN_DEFAULT;\r\n\r\n  const css = `\r\n  :root { color-scheme: dark; --bg:#0b0f10; --card:#11181a; --muted:#6b7f7a; --fg:#e9ffef; --brand:#52ff99; --warn:#ffcc66; --err:#ff7a7a; --ok:#7dffa1; }\r\n  *{box-sizing:border-box} html,body,#root{height:100%} body{margin:0;background:var(--bg);color:var(--fg);font:14px/1.4 system-ui,Segoe UI,Roboto,Helvetica,Arial}\r\n  a{color:var(--brand);text-decoration:none}\r\n  .nav{display:flex;gap:.75rem;align-items:center;padding:.75rem 1rem;border-bottom:1px solid #17322a;background:#0d1415;position:sticky;top:0}\r\n  .nav .brand{display:flex;align-items:center;gap:.5rem;font-weight:600}\r\n  .tag{padding:.1rem .4rem;border-radius:.4rem;background:#143c2c;color:#72ffb6}\r\n  .sp{flex:1}\r\n  .btn{background:#123026;border:1px solid #1d4a39;color:var(--fg);padding:.5rem .75rem;border-radius:.6rem;cursor:pointer}\r\n  .btn:hover{background:#173a2e}\r\n  .wrap{max-width:1100px;margin:0 auto;padding:1rem}\r\n  .grid{display:grid;gap:1rem}\r\n  .kpis{grid-template-columns:repeat(auto-fit,minmax(180px,1fr))}\r\n  .card{background:var(--card);border:1px solid #15352a;border-radius:1rem;padding:1rem}\r\n  .muted{color:var(--muted)}\r\n  .hero{font-size:28px}\r\n  input,select{background:#0e1516;border:1px solid #193c30;color:var(--fg);border-radius:.5rem;padding:.5rem .6rem}\r\n  table{width:100%;border-collapse:collapse}\r\n  th,td{padding:.4rem .5rem;border-bottom:1px solid #183328}\r\n  .badge{border:1px solid #2b5a49;border-radius:.4rem;padding:.1rem .35rem}\r\n  `;\r\n\r\n  const js = `\r\n  const e=React.createElement;\r\n  const root=ReactDOM.createRoot(document.getElementById('root'));\r\n  const api=path=>fetch(path,{headers:{}}).then(r=>r.ok?r.json():Promise.reject(r));\r\n  const qs=new URLSearchParams(location.search);\r\n  const RETURN_URL = qs.get('return') || ${JSON.stringify(returnLink)};\r\n\r\n  function useMe(){\r\n    const [me,setMe]=React.useState(null);\r\n    const [err,setErr]=React.useState(null);\r\n    React.useEffect(()=>{ api('/api/me').then(setMe).catch(()=>setErr(true)); },[]);\r\n    return {me,err};\r\n  }\r\n\r\n  function TopNav({me}){\r\n    return e('div',{className:'nav'},\r\n      e('div',{className:'brand'}, e('img',{src:'/assets/GREENBRO LOGO APP.svg',height:24}), 'GreenBro Dashboard'),\r\n      e('span',{className:'tag'}, me? me.roles.join(', ') : 'guest'),\r\n      e('div',{className:'sp'}),\r\n      e('a',{href:'/app/logout?return='+encodeURIComponent(RETURN_URL), className:'btn'}, 'Logout')\r\n    );\r\n  }\r\n\r\n  function Page({title,children}) {\r\n    return e('div',null,\r\n      e('div',{className:'wrap'},\r\n        e('h2',null,title),\r\n        children\r\n      )\r\n    );\r\n  }\r\n\r\n  function OverviewPage(){\r\n    return e(Page,{title:'Overview (Fleet)'},\r\n      e('div',{className:'grid kpis'},\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Online %'), e('div',{className:'hero'},'\u2014')),\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Open Alerts'), e('div',{className:'hero'},'\u2014')),\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Avg COP (24h)'), e('div',{className:'hero'},'\u2014')),\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Low-\u0394T Count'), e('div',{className:'hero'},'\u2014')),\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Heartbeat Freshness'), e('div',{className:'hero'},'\u2014'))\r\n      ),\r\n      e('div',{className:'card',style:{marginTop:'1rem'}}, e('b',null,'Regions'), e('div',null,'Gauteng \u2022 KZN \u2022 Western Cape (filters devices link)'))\r\n    );\r\n  }\r\n\r\n  function CompactDashboardPage(){\r\n    return e(Page,{title:'My Sites \u2014 Compact'}, \r\n      e('div',{className:'grid kpis'},\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Online %'), e('div',{className:'hero'},'\u2014')),\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Open Alerts'), e('div',{className:'hero'},'\u2014')),\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Avg COP (24h)'), e('div',{className:'hero'},'\u2014')),\r\n        e('div',{className:'card'}, e('div',{className:'muted'},'Low-\u0394T'), e('div',{className:'hero'},'\u2014'))\r\n      ),\r\n      e('div',{className:'card',style:{marginTop:'1rem'}}, e('b',null,'Recent alerts'), e('div',null,'(placeholder)'))\r\n    );\r\n  }\r\n\r\n  function DevicesPage(){\r\n    const [id,setId]=React.useState('GB-HP-001234');\r\n    const [data,setData]=React.useState(null);\r\n    const [err,setErr]=React.useState(null);\r\n    const fetchLatest=()=>api('/api/devices/'+encodeURIComponent(id)+'/latest').then(setData).catch(()=>setErr(true));\r\n    return e(Page,{title:'Devices'},\r\n      e('div',{className:'card'},\r\n        e('div',null,\r\n          e('label',null,'Device ID '),\r\n          e('input',{value:id,onChange:e=>setId(e.target.value),style:{marginRight:8}}),\r\n          e('button',{className:'btn',onClick:fetchLatest},'Open')\r\n        ),\r\n        data && e('div',{style:{marginTop:'1rem'}},\r\n          e('div',null, e('b',null,'Device: '), data.device_id),\r\n          e('pre',null, JSON.stringify(data.latest,null,2))\r\n        ),\r\n        err && e('div',{style:{color:\"var(--err)\"}},'Error loading device')\r\n      )\r\n    );\r\n  }\r\n\r\n  function DeviceDetailPage(){\r\n    const [id,setId]=React.useState('GB-HP-001234');\r\n    const [d,setD]=React.useState(null);\r\n    const load=()=>api('/api/devices/'+encodeURIComponent(id)+'/latest').then(setD).catch(()=>setD(null));\r\n    React.useEffect(load,[]);\r\n    const v=(k)=> d?.latest?.[k] ?? '\u2014';\r\n    return e(Page,{title:'Device Detail'},\r\n      e('div',{className:'card'},\r\n        e('div',null, e('label',null,'Device ID '), e('input',{value:id,onChange:e=>setId(e.target.value)}), e('button',{className:'btn',onClick:load,style:{marginLeft:8}},'Load')),\r\n        e('div',{className:'grid',style:{gridTemplateColumns:'repeat(auto-fit,minmax(160px,1fr))',marginTop:'1rem'}},\r\n          ['supplyC','returnC','deltaT','tankC','ambientC','flowLps','compCurrentA','eevSteps','powerKW','thermalKW','cop','mode','defrost','online'].map(k =>\r\n            e('div',{key:k,className:'card'}, e('div',{className:'muted'},k), e('div',{className:'hero'}, String(v(k))))\r\n          )\r\n        ),\r\n        e('div',{className:'muted',style:{marginTop:'1rem'}},'Charts & alerts placeholders')\r\n      )\r\n    );\r\n  }\r\n\r\n  function AlertsPage(){ return e(Page,{title:'Alerts'}, e('div',{className:'card'},'(placeholder queues)')); }\r\n  function CommissioningPage(){ return e(Page,{title:'Commissioning & QA'}, e('div',{className:'card'},'(checklist placeholder, Generate Report later)')); }\r\n  function AdminPage(){ return e(Page,{title:'Admin'}, e('div',{className:'card'},'Users, roles, MFA coverage (placeholder)')); }\r\n  function AdminArchivePage(){ return e(Page,{title:'Admin Archive'}, e('div',{className:'card'},'(placeholder)')); }\r\n\r\n  function UnauthorizedPage(){\r\n    return e('div',null,\r\n      e('div',{className:'wrap'},\r\n        e('div',{className:'card'}, e('h2',null,'Access required'),\r\n          e('p',null,'Please sign in to continue.'),\r\n          e('a',{className:'btn',href:'/cdn-cgi/access/login?redirect_url='+encodeURIComponent('/app')},'Sign in'),\r\n          e('div',{style:{marginTop:'1rem'}}, e('a',{href: RETURN_URL},'Back to GreenBro'))\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  function App(){\r\n    const {me,err} = useMe();\r\n\r\n    if (err) return e(UnauthorizedPage);\r\n    if (!me) return e('div',null,e('div',{className:'wrap'}, e('div',{className:'card'}, 'Loading\u2026')));\r\n\r\n    const path = location.pathname.replace(/^\\\\/app\\\\/?/,'') || '';\r\n    const page = path.split('/')[0];\r\n\r\n    if (path==='' || path==='index.html'){\r\n      const landing = (me.roles||[]).includes('admin') ? '/app/overview'\r\n        : (me.roles||[]).includes('client') ? '/app/compact'\r\n        : '/app/devices';\r\n      if (location.pathname !== landing) { history.replaceState(null,'',landing); }\r\n    }\r\n\r\n    const content =\r\n      page==='overview' ? e(OverviewPage)\r\n      : page==='compact' ? e(CompactDashboardPage)\r\n      : page==='devices' ? e(DevicesPage)\r\n      : page==='device' ? e(DeviceDetailPage)\r\n      : page==='alerts' ? e(AlertsPage)\r\n      : page==='commissioning' ? e(CommissioningPage)\r\n      : page==='admin' ? e(AdminPage)\r\n      : page==='admin-archive' ? e(AdminArchivePage)\r\n      : e(OverviewPage);\r\n\r\n    return e('div',null,\r\n      e(TopNav,{me}),\r\n      content\r\n    );\r\n  }\r\n\r\n  root.render(e(App));\r\n  `;\r\n\r\n  return `<!doctype html>\r\n<html lang=\"en-ZA\">\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n  <title>GreenBro \u2014 Heat Pump Dashboard</title>\r\n  <style>${css}</style>\r\n</head>\r\n<body>\r\n  <div id=\"root\"></div>\r\n  <script src=\"https://unpkg.com/react@18/umd/react.production.min.js\"></script>\r\n  <script src=\"https://unpkg.com/react-dom@18/umd/react-dom.production.min.js\"></script>\r\n  <script>${js}</script>\r\n</body>\r\n</html>`;\r\n}\r\n\r\n// ---- Worker export -----------------------------------------------------------\r\n\r\nexport default {\r\n  async fetch(req: Request, env: Env): Promise<Response> {\r\n    const url = new URL(req.url);\r\n    const path = url.pathname;\r\n\r\n    // Absolute redirect to avoid \"Unable to parse URL: /app\" in preview.\r\n    if (path === \"/\") {\r\n      return Response.redirect(url.origin + \"/app\", 302);\r\n    }\r\n\r\n    // CORS preflight for device routes (ingest/heartbeat/latest)\r\n    const pre = maybeHandlePreflight(req, path);\r\n    if (pre) return pre;\r\n\r\n    if (path === \"/favicon.ico\") {\r\n      return withSecurityHeaders(new Response(\"\", { status: 204 }));\r\n    }\r\n\r\n    if (path === \"/sw-brand.js\") {\r\n      return withSecurityHeaders(\r\n        new Response(\"// stub\\n\", { headers: { \"content-type\": \"application/javascript\" } }),\r\n      );\r\n    }\r\n\r\n    // OPTIONS fallback (non-device paths)\r\n    if (req.method === \"OPTIONS\") {\r\n      return withSecurityHeaders(new Response(\"\", { status: 204, headers: CORS_BASE }));\r\n    }\r\n\r\n    // Static assets\r\n    if (path.startsWith(\"/assets/\")) {\r\n      const name = decodeURIComponent(path.replace(\"/assets/\", \"\"));\r\n      const a = ASSETS[name];\r\n      if (!a) return text(\"Not found\", { status: 404 });\r\n      return withSecurityHeaders(new Response(a.body, { headers: { \"content-type\": a.ct } }));\r\n    }\r\n\r\n    // Health\r\n    if (path === \"/health\") return handleHealth();\r\n\r\n    // App shell\r\n    if (path === \"/app\" || path === \"/app/\") {\r\n      const user = await requireAccessUser(req, env);\r\n      if (!user) {\r\n        return withSecurityHeaders(\r\n          new Response(appHtml(env, new URL(req.url).searchParams.get(\"return\")), {\r\n            headers: { \"content-type\": HTML_CT },\r\n          }),\r\n        );\r\n      }\r\n      // Redirect to role landing; APP_BASE_URL should be absolute (https://...)\r\n      return Response.redirect(env.APP_BASE_URL + landingFor(user), 302);\r\n    }\r\n\r\n    // Logout route \u2013 make absolute too\r\n    if (path === \"/app/logout\") {\r\n      const ret = url.searchParams.get(\"return\") || env.RETURN_DEFAULT;\r\n      const logoutUrl = new URL(\r\n        `/cdn-cgi/access/logout?return=${encodeURIComponent(ret)}`,\r\n        url,\r\n      ).toString();\r\n      return Response.redirect(logoutUrl, 302);\r\n    }\r\n\r\n    if (path.startsWith(\"/app/\")) {\r\n      const user = await requireAccessUser(req, env);\r\n      if (!user) {\r\n        return withSecurityHeaders(\r\n          new Response(appHtml(env, new URL(req.url).searchParams.get(\"return\")), {\r\n            headers: { \"content-type\": HTML_CT },\r\n          }),\r\n        );\r\n      }\r\n      return withSecurityHeaders(\r\n        new Response(appHtml(env, new URL(req.url).searchParams.get(\"return\")), {\r\n          headers: { \"content-type\": HTML_CT },\r\n        }),\r\n      );\r\n    }\r\n\r\n    // API routes\r\n    if (path === \"/api/me\" && req.method === \"GET\") return handleMe(req, env);\r\n\r\n    // NEW: list devices (tenant-scoped)\r\n    if (path === \"/api/devices\" && req.method === \"GET\") {\r\n      return handleListDevices(req, env);\r\n    }\r\n\r\n    const latestMatch = path.match(/^\\/api\\/devices\\/([^/]+)\\/latest$/);\r\n    if (latestMatch && req.method === \"GET\") {\r\n      return handleLatest(req, env, decodeURIComponent(latestMatch[1]));\r\n    }\r\n\r\n    const ingestMatch = path.match(/^\\/api\\/ingest\\/([^/]+)$/);\r\n    if (ingestMatch && req.method === \"POST\") {\r\n      return handleIngest(req, env, decodeURIComponent(ingestMatch[1]));\r\n    }\r\n\r\n    const hbMatch = path.match(/^\\/api\\/heartbeat\\/([^/]+)$/);\r\n    if (hbMatch && req.method === \"POST\") {\r\n      return handleHeartbeat(req, env, decodeURIComponent(hbMatch[1]));\r\n    }\r\n\r\n    return json({ error: \"Not found\" }, { status: 404 });\r\n  },\r\n\r\n  // Cron: mark devices offline if stale (runs via wrangler triggers)\r\n  async scheduled(_event: ScheduledEvent, env: Env, _ctx: ExecutionContext) {\r\n    const hbInterval = Number(env.HEARTBEAT_INTERVAL_SECS ?? \"30\");\r\n    const multiplier = Number(env.OFFLINE_MULTIPLIER ?? \"6\");\r\n    const thresholdSecs = Math.max(60, hbInterval * multiplier); // clamp >=60s\r\n\r\n    // julianday('now') difference in days; convert seconds -> days\r\n    const days = thresholdSecs / 86400;\r\n\r\n    // 1) Find devices that are currently online but stale\r\n    const stale = await env.DB.prepare(\r\n      `SELECT device_id FROM devices\r\n        WHERE online = 1\r\n          AND (last_seen_at IS NULL OR (julianday('now') - julianday(last_seen_at)) > ?1)`\r\n    ).bind(days).all<{ device_id: string }>();\r\n\r\n    const ids = stale.results?.map(r => r.device_id) ?? [];\r\n    if (!ids.length) return;\r\n\r\n    // 2) Mark them offline and reflect in latest_state\r\n    const updates: D1PreparedStatement[] = [];\r\n    for (const id of ids) {\r\n      updates.push(\r\n        env.DB.prepare(`UPDATE devices SET online=0 WHERE device_id=?1`).bind(id),\r\n      );\r\n      updates.push(\r\n        env.DB.prepare(`UPDATE latest_state SET online=0, updated_at=?2 WHERE device_id=?1`)\r\n          .bind(id, new Date().toISOString()),\r\n      );\r\n      // Optional: write an ops_metrics breadcrumb\r\n      updates.push(\r\n        env.DB.prepare(\r\n          `INSERT INTO ops_metrics (ts, route, status_code, duration_ms, device_id)\r\n           VALUES (?1,'/cron/offline',200,0,?2)`\r\n        ).bind(new Date().toISOString(), id),\r\n      );\r\n    }\r\n    await env.DB.batch(updates);\r\n  },\r\n};\r\n"],
  "mappings": "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",
  "names": ["message", "types", "jwk", "json", "jwksCache"]
}
